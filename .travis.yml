
language: minimal
dist: xenial

install:
- git clone --branch=cs-lxd-install "https://github.com/travis-ci/packer-templates.git"
- pushd packer-templates

env:
  global:
    - BUILDER="lxd"
    - AWS_ACCESS_KEY_ID=$LXC_AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY=$LXC_AWS_SECRET_ACCESS_KEY
    - JOB_BOARD_IMAGES_URL=$LXC_JOB_BOARD_IMAGES_URL

  jobs:
    #- TEMPLATE="ubuntu-16.04-minimal" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-18.04-minimal" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-20.04-minimal" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
#     - TEMPLATE="ubuntu-16.04-full" ARCH="arm64" BUILDER_HOST=$CS_HOST
    # - TEMPLATE="ubuntu-18.04-full" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-20.04-full" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-16.04-generic" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-18.04-generic" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-20.04-generic" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    #- TEMPLATE="ubuntu-16.04-minimal" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-18.04-minimal" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-20.04-minimal" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    # - TEMPLATE="ubuntu-16.04-generic" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-18.04-generic" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    # - TEMPLATE="ubuntu-20.04-generic" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-16.04-full" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-18.04-full" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-20.04-full" ARCH="ppc64le" BUILDER_HOST=$BUILDER_ppc64le
    #- TEMPLATE="ubuntu-16.04-minimal" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
    #- TEMPLATE="ubuntu-16.04-generic" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
      #- TEMPLATE="ubuntu-18.04-generic" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
    #- TEMPLATE="ubuntu-16.04-full" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
    - TEMPLATE="ubuntu-18.04-minimal" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
    #- TEMPLATE="ubuntu-18.04-full" ARCH="s390x" BUILDER_HOST=$BUILDER_s390x
    # - TEMPLATE="ubuntu-16.04-ruby" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64
    # - TEMPLATE="ubuntu-18.04-ruby" ARCH="arm64" BUILDER_HOST=$BUILDER_arm64

before_script:
- |
  echo '
  Host *
    StrictHostKeyChecking no
    UserKnownHostsFile=/dev/null
    LogLevel ERROR
  '>> ~/.ssh/config
- eval $BUILDER_KEY
- if [[ $ARCH == "ppc64le" ]]; then echo $BUILDER_KEY_PPC | base64 --decode > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && export BUILDER_USER=$BUILDER_USER_PPC; fi
- if [[ $ARCH == "arm64" ]]; then echo $BUILDER_KEY_ARM64 | base64 --decode > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && export BUILDER_USER=$BUILDER_USER_ARM64; fi
- if [[ $ARCH == "s390x" ]]; then echo $BUILDER_KEY_PPC | base64 --decode > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && export BUILDER_USER=$BUILDER_USER_PPC; fi


script:
- make $TEMPLATE
